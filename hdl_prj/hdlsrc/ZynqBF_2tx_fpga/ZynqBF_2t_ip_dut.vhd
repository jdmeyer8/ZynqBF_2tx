-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/ZynqBF_2tx_fpga/ZynqBF_2t_ip_dut.vhd
-- Created: 2019-01-15 11:04:41
-- 
-- Generated by MATLAB 9.5 and HDL Coder 3.13
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ZynqBF_2t_ip_dut
-- Source Path: ZynqBF_2t_ip/ZynqBF_2t_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ZynqBF_2t_ip_dut IS
  PORT( rx_i_in                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        rx_q_in                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        rx_v_in                           :   IN    std_logic;  -- ufix1
        rx_i_out                          :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        rx_q_out                          :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        rx_v_out                          :   OUT   std_logic;  -- ufix1
        ch1_i                             :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        ch1_q                             :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        ch2_i                             :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        ch2_q                             :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
        );
END ZynqBF_2t_ip_dut;


ARCHITECTURE rtl OF ZynqBF_2t_ip_dut IS

  -- Component Declarations
  COMPONENT ZynqBF_2t_ip_src_ZynqBF_2tx_fpga
    PORT( rx_i_in                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          rx_q_in                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          rx_v_in                         :   IN    std_logic;  -- ufix1
          rx_i_out                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          rx_q_out                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          rx_v_out                        :   OUT   std_logic;  -- ufix1
          ch1_i                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          ch1_q                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          ch2_i                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          ch2_q                           :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ZynqBF_2t_ip_src_ZynqBF_2tx_fpga
    USE ENTITY work.ZynqBF_2t_ip_src_ZynqBF_2tx_fpga(rtl);

  -- Signals
  SIGNAL rx_v_in_sig                      : std_logic;  -- ufix1
  SIGNAL rx_i_out_sig                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL rx_q_out_sig                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL rx_v_out_sig                     : std_logic;  -- ufix1
  SIGNAL ch1_i_sig                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL ch1_q_sig                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL ch2_i_sig                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL ch2_q_sig                        : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_ZynqBF_2t_ip_src_ZynqBF_2tx_fpga : ZynqBF_2t_ip_src_ZynqBF_2tx_fpga
    PORT MAP( rx_i_in => rx_i_in,  -- sfix16_En15
              rx_q_in => rx_q_in,  -- sfix16_En15
              rx_v_in => rx_v_in_sig,  -- ufix1
              rx_i_out => rx_i_out_sig,  -- sfix16_En15
              rx_q_out => rx_q_out_sig,  -- sfix16_En15
              rx_v_out => rx_v_out_sig,  -- ufix1
              ch1_i => ch1_i_sig,  -- sfix16_En15
              ch1_q => ch1_q_sig,  -- sfix16_En15
              ch2_i => ch2_i_sig,  -- sfix16_En15
              ch2_q => ch2_q_sig  -- sfix16_En15
              );

  rx_v_in_sig <= rx_v_in;

  rx_i_out <= rx_i_out_sig;

  rx_q_out <= rx_q_out_sig;

  rx_v_out <= rx_v_out_sig;

  ch1_i <= ch1_i_sig;

  ch1_q <= ch1_q_sig;

  ch2_i <= ch2_i_sig;

  ch2_q <= ch2_q_sig;

END rtl;

